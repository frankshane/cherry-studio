# .github/workflows/build-installer.yml

name: Build Windows Installer

on:
  workflow_dispatch:
  push:
    branches:
      - 'build/windows7-support'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # 安装 MSBuild (VS C++ Build Tools)
      - name: Install C++ Build Tools
        uses: microsoft/setup-msbuild@v2

      # 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      # 使用 Yarn 安装依赖
      - name: Install dependencies with Yarn
        run: yarn install --frozen-lockfile

      # 安装 dotenv-cli (构建脚本需要它)
      - name: Install dotenv-cli globally
        run: npm install -g dotenv-cli

      # 手动应用 Windows 7 补丁 (如果存在)
      - name: Apply Windows 7 patches
        run: |
          if (Test-Path "src\patch\windows7") {
            Write-Host "Applying Windows 7 patches..."
            xcopy "src\patch\windows7\*" "node_modules\" /E /Y /I
          } else {
            Write-Host "No Windows 7 patches found, proceeding with standard build"
          }
        shell: powershell

      # 使用现有的 Windows x64 构建命令
      - name: Build Windows x64 version
        run: yarn run build:win:x64
        env:
          npm_config_msvs_version: 2022

      # 上传构建产物
      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: cherry-studio-installer
          path: |
            dist/*.exe
            dist/*.msi
            dist/*.zip
          retention-days: 7
