# GitHub Actions 配置文件的名字
name: Build Cherry Studio for Windows

# 触发条件：当手动点击 "Run workflow" 按钮时运行
on:
  workflow_dispatch:

jobs:
  build:
    # 指定运行环境：使用 GitHub 提供的最新版 Windows 虚拟机
    runs-on: windows-latest

    steps:
      # 第1步：获取代码，并明确指定要拉取的分支
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: 'CherryHQ/cherry-studio' # 直接从源仓库拉取，避免你自己fork的仓库分支不同步
          ref: 'build/windows7-support'

      # 第2步：安装 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8 # 使用 pnpm 版本 8
      
      # 第3步：设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm' # 使用 pnpm 缓存

      # 第4步：安装 Rust 环境
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # 第5步：安装项目依赖
      - name: Install dependencies with pnpm
        run: pnpm install --frozen-lockfile

      # 第6步：打包 Tauri 应用
      - name: Build the application
        run: pnpm build:win
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # 第7步：上传打包好的文件
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cherry-studio-windows-installer
          # 路径保持不变，这通常是Tauri的默认输出路径
          path: |
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/msi/*.msi
